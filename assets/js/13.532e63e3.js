(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{365:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sql-snippets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-snippets"}},[t._v("#")]),t._v(" SQL Snippets")]),t._v(" "),a("p",[t._v("These are SQL Snippets")]),t._v(" "),a("h2",{attrs:{id:"query-order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-order"}},[t._v("#")]),t._v(" Query Order")]),t._v(" "),a("ul",[a("li",[t._v("Select")]),t._v(" "),a("li",[t._v("From")]),t._v(" "),a("li",[t._v("Where")]),t._v(" "),a("li",[t._v("Groupby")]),t._v(" "),a("li",[t._v("Having")]),t._v(" "),a("li",[t._v("Orderby")]),t._v(" "),a("li",[t._v("Offset")])]),t._v(" "),a("h2",{attrs:{id:"table-creation-and-setting-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-creation-and-setting-keys"}},[t._v("#")]),t._v(" Table Creation and Setting Keys")]),t._v(" "),a("h3",{attrs:{id:"creating-a-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-table"}},[t._v("#")]),t._v(" Creating a Table")]),t._v(" "),a("p",[t._v("From inside SSMS right click on databases select new database and create one.")]),t._v(" "),a("p",[t._v("Select the database and click new query.")]),t._v(" "),a("p",[t._v("In the query window enter:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\temail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This creates a table called users with one column email that is of type varchar (variable character field) with a max length of 50 characters.")]),t._v(" "),a("p",[t._v("Refresh the object explorer after running a query for the changes to show up.")]),t._v(" "),a("h3",{attrs:{id:"dropping-a-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dropping-a-table"}},[t._v("#")]),t._v(" Dropping a table")]),t._v(" "),a("p",[t._v("To delete a table (drop it) run a new query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This will remove the table from the database.")]),t._v(" "),a("h3",{attrs:{id:"creating-an-integer-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-integer-primary-key"}},[t._v("#")]),t._v(" Creating an Integer Primary Key")]),t._v(" "),a("p",[t._v("Run a new query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Now the first column Id is an integer and is also used as the primary key no duplicate integers will be allowed in this field they must be unique.")]),t._v(" "),a("h3",{attrs:{id:"creating-a-guid-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-guid-primary-key"}},[t._v("#")]),t._v(" Creating a Guid Primary Key")]),t._v(" "),a("p",[t._v("Used to have unique Id’s to enable easier data access outside of SMSS.")]),t._v(" "),a("p",[t._v("Run a new query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId uniqueidentifier "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The table users is created with one column that is a primary key of type Guid.")]),t._v(" "),a("h3",{attrs:{id:"auto-incrementing-primary-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-incrementing-primary-keys"}},[t._v("#")]),t._v(" Auto-Incrementing Primary Keys")]),t._v(" "),a("p",[a("strong",[t._v("Using integers.")])]),t._v(" "),a("p",[t._v("Run a query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\temail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The table has an integer primary key. As data is added to the email column\nthe Id column will auto populate starting at 1 the second 1 in the parameter means that the Id will then increment by one when each row is populated.")]),t._v(" "),a("p",[a("strong",[t._v("Using Guids.")])]),t._v(" "),a("p",[t._v("Run a query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId uniqueidentifier "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" newid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\temail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("After editing the table data will show null. Right click in the edit pane and click Execute SQL this will refresh the view and the Id’s will show up.")]),t._v(" "),a("h3",{attrs:{id:"composite-keys-use-of-more-than-one-field-as-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#composite-keys-use-of-more-than-one-field-as-primary-key"}},[t._v("#")]),t._v(" Composite Keys - use of more than one field as primary key")]),t._v(" "),a("p",[t._v("Using an intermediate table for a one to many relationship.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\temail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users_Roles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUserId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tRoleId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UserId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("RoleId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Roles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This sets the UserId and the RoleId as a composite primary key in the Users_Roles table this ensures that the user can only be assigned a role once as the 2 properties are being checked to make sure they are a unique combination.")]),t._v(" "),a("h2",{attrs:{id:"columns-and-constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#columns-and-constraints"}},[t._v("#")]),t._v(" Columns and Constraints")]),t._v(" "),a("h3",{attrs:{id:"defining-columns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defining-columns"}},[t._v("#")]),t._v(" Defining Columns")]),t._v(" "),a("p",[t._v("Use a comma delimited list to set columns.")]),t._v(" "),a("p",[t._v("Run a query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tEmail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tCreatedAt "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("First")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Last")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tBio "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This creates 6 columns with the headings Id, Email, CreatedAt, First, Last and Bio (set to max value of varchar) Text could also be used.")]),t._v(" "),a("h3",{attrs:{id:"basic-column-constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-column-constraints"}},[t._v("#")]),t._v(" Basic Column Constraints")]),t._v(" "),a("ul",[a("li",[t._v("not null - used to make a field require a value.")]),t._v(" "),a("li",[t._v("unique - used to make the field need to be a unique value.")]),t._v(" "),a("li",[t._v("decimal(10,2) - used to limit the decimal number to 10 numbers with 2 decimal places.")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tEmail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tCreatedAt "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("First")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Last")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tBio "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("text")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"column-defaults"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#column-defaults"}},[t._v("#")]),t._v(" Column Defaults")]),t._v(" "),a("p",[t._v("Default - keyword can be used to set the default behavior of the field.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("MoneySpent "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("decimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nCreatedAt "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" getdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("These parameters set the MoneySpent field to default to 0 and the CreatedAt field to default to the current date and time.")]),t._v(" "),a("h2",{attrs:{id:"inserting-updating-and-deleting-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inserting-updating-and-deleting-data"}},[t._v("#")]),t._v(" Inserting, Updating and Deleting Data")]),t._v(" "),a("h3",{attrs:{id:"inserting-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inserting-data"}},[t._v("#")]),t._v(" Inserting Data")]),t._v(" "),a("p",[t._v("Use the insert keyword.")]),t._v(" "),a("p",[t._v("Run a query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CreatedAt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("First")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Last")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Bio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test2@test.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some person'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Multiple values can be wrapped in parentheses and inserted into the table.")]),t._v(" "),a("h3",{attrs:{id:"bulk-inserts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bulk-inserts"}},[t._v("#")]),t._v(" Bulk Inserts")]),t._v(" "),a("p",[t._v("Use to insert multiple fields from a data source.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("First")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Last")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Chinook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dbo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customer\n")])])]),a("p",[t._v("The above query inserts all the select fields from the Chinook.dbo.Customer table into the Users table in the corresponding parameter fields.\n"),a("br"),t._v("This is a good way to bulk insert data from another table.")]),t._v(" "),a("h3",{attrs:{id:"updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updates"}},[t._v("#")]),t._v(" Updates")]),t._v(" "),a("p",[t._v("Use update statements to update data in the table.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" Users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v("\nCreatedAt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'09/23/2014'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This query updates the created at field in the users table where the row contains the Id of 1.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" Users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v("\nCreatedAt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'09/23/2013'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'luisg@embraer.com.br'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("If the primary key is not known another field can be used in the where statement to identify the row.")]),t._v(" "),a("h3",{attrs:{id:"bulk-updates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bulk-updates"}},[t._v("#")]),t._v(" Bulk Updates")]),t._v(" "),a("p",[t._v("Where statements can be used to update multiple results that match the criteria.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" Users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v("\nCreatedAt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'09/23/2013'")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("This query updates the first 10 users CreatedAt field.")]),t._v(" "),a("h3",{attrs:{id:"deleting-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deleting-data"}},[t._v("#")]),t._v(" Deleting Data")]),t._v(" "),a("p",[t._v("Use a delete statement to remove data from the table.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Users\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"bulk-delete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bulk-delete"}},[t._v("#")]),t._v(" Bulk Delete")]),t._v(" "),a("p",[t._v("Use a where statement to select multiple rows for deletion.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Users \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Deletes all rows from Users table where the user Id is 10 or less.")]),t._v(" "),a("p",[t._v("Use a delete statement with no criteria to delete all data in the table.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Deletes all rows from the Users table.")]),t._v(" "),a("h2",{attrs:{id:"selects-aliases-and-joins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#selects-aliases-and-joins"}},[t._v("#")]),t._v(" Selects, Aliases and Joins")]),t._v(" "),a("h3",{attrs:{id:"select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" Select")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" TableName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("selects all rows from a table.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Email "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),a("p",[t._v("selects the three columns listed from the customer table.")]),t._v(" "),a("h3",{attrs:{id:"aliasing-columns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aliasing-columns"}},[t._v("#")]),t._v(" Aliasing Columns")]),t._v(" "),a("p",[t._v("To change the names of column headings the as keyword can be used.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" firstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("First")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nlastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Last")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Displays two columns First and Last with the data from firstName, lastName. Quotation can be used to add spaces in headings ‘First Name’ e.t.c.")]),t._v(" "),a("h3",{attrs:{id:"column-expressions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#column-expressions"}},[t._v("#")]),t._v(" Column Expressions")]),t._v(" "),a("p",[t._v("To concatenate strings the ‘+’ operator can be used.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" lastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Customer Name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nEmail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Country\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"inner-joins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inner-joins"}},[t._v("#")]),t._v(" Inner Joins")]),t._v(" "),a("p",[t._v("Used to join 2 tables with a common field.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UnitPrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Quantity\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Invoice\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" InvoiceLine\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" InvoiceLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvoiceId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvoiceId\n")])])]),a("p",[t._v("In this query the rows from the InvoiceLine table are joined to the Invoice table using the InvoiceId as a common field. This makes all the data from the tables accessible using the InvoiceId as a key for the rows.")]),t._v(" "),a("h3",{attrs:{id:"left-joins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#left-joins"}},[t._v("#")]),t._v(" Left Joins")]),t._v(" "),a("p",[t._v("Used to show all rows from the left most table with the property in the query even if the joining field is not in the right hand table null is displayed where the data is not present.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Title\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Album\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Album"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArtistId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Artist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArtistId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("In the above query all the rows from the Artist table are included as this is the table on the left. All the Id’s and names are displayed. Where the Album table has a corresponding ArtistId the Title of the album is shown. If an artist has no album in the table the title column is null.")]),t._v(" "),a("h3",{attrs:{id:"right-joins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#right-joins"}},[t._v("#")]),t._v(" Right Joins")]),t._v(" "),a("p",[t._v("The opposite of a left join.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Title\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Album\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Album"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArtistId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Artist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArtistId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("All the artistId and title will display from the album table if the corresponding artist name is not in the artist table then null will be shown for the name.")]),t._v(" "),a("h3",{attrs:{id:"full-joins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-joins"}},[t._v("#")]),t._v(" Full Joins")]),t._v(" "),a("p",[t._v("Equivalent of a left right join. All matching data is displayed from both tables and if a field does not correspond null is shown. This is a good way to check if the tables contain the correct Id’s e.t.c.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Title\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("full")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Album\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Album"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArtistId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Artist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArtistId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"ordering-and-filtering-results"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ordering-and-filtering-results"}},[t._v("#")]),t._v(" Ordering and Filtering Results")]),t._v(" "),a("h3",{attrs:{id:"ordering-results"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ordering-results"}},[t._v("#")]),t._v(" Ordering Results")]),t._v(" "),a("p",[t._v("Order by is used to order the query results if the desc keyword is used the query results are shown in descending order.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nInvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Invoice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Brazil'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Total "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The above query finds the customer with the biggest invoice total in Brazil ordered by descending total.")]),t._v(" "),a("h3",{attrs:{id:"limiting-results"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limiting-results"}},[t._v("#")]),t._v(" Limiting Results")]),t._v(" "),a("p",[t._v("Use select top (number) to fetch the top (number) matches to a query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("top")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nInvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Invoice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Brazil'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Total "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"sequential-ordering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sequential-ordering"}},[t._v("#")]),t._v(" Sequential Ordering")]),t._v(" "),a("p",[t._v("The order by statement can take multiple fields to shape the order of the data displayed.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nInvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Invoice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Canada'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Note that in the above query even though LastName is not displayed in the select statement the field can still be used in the order by operation.")]),t._v(" "),a("h3",{attrs:{id:"filtering-by-sets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filtering-by-sets"}},[t._v("#")]),t._v(" Filtering By Sets")]),t._v(" "),a("p",[t._v("Use IN and - to filter query results. The NOT IN operator can be used to exclude rows from the results.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nInvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Invoice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ‘Canada’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ‘Argentina’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" Total "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The query is filtered first by country then the total sales must be more than 5 then ordered by Country descending then LastName ascending.")]),t._v(" "),a("h3",{attrs:{id:"offsetting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offsetting"}},[t._v("#")]),t._v(" Offsetting")]),t._v(" "),a("p",[t._v("Offsetting can be used to remove rows from the query results. The results must first have an order by statement before the rows can be offset the number of rows specified to offset are removed from the top of the displayed results.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nInvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Customer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Invoice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CustomerId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Total "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"aggregates-and-grouping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aggregates-and-grouping"}},[t._v("#")]),t._v(" Aggregates and Grouping")]),t._v(" "),a("h3",{attrs:{id:"basic-aggregates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-aggregates"}},[t._v("#")]),t._v(" Basic Aggregates")]),t._v(" "),a("ul",[a("li",[t._v("SUM - Total of column")]),t._v(" "),a("li",[t._v("AVG - Mean average of column.")]),t._v(" "),a("li",[t._v("COUNT - Total rows in column")]),t._v(" "),a("li",[t._v("MIN - Smallest value in column")]),t._v(" "),a("li",[t._v("MAX - Largest value in column")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" AllTimeSales"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" AvgSale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" SalesCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" SmallestSale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" BiggestSale\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"grouping-results"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grouping-results"}},[t._v("#")]),t._v(" Grouping Results")]),t._v(" "),a("p",[t._v("When selecting a field when aggregating results the query must have a group by statement to tell the query how to use the data in the field.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" BillingCountry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" AllTimeSales\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Invoice\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" BillingCountry\n")])])]),a("h3",{attrs:{id:"filtering-aggregate-results"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filtering-aggregate-results"}},[t._v("#")]),t._v(" Filtering Aggregate Results")]),t._v(" "),a("p",[t._v("When filtering aggregate results the AND keyword is not used instead use the HAVING keyword.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" BillingCountry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnitPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" SalesTotal\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Invoice\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" InvoiceLine "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" InvoiceLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvoiceId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InvoiceId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Where")]),t._v(" BillingCountry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Germany'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Argentina'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'United Kingdom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" BillingCountry\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Having")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnitPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" BillingCountry\n")])])]),a("h2",{attrs:{id:"setting-many-to-many-constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-many-to-many-constraints"}},[t._v("#")]),t._v(" Setting Many to Many Constraints")]),t._v(" "),a("h3",{attrs:{id:"many-to-many-table-constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#many-to-many-table-constraints"}},[t._v("#")]),t._v(" Many to Many Table Constraints")]),t._v(" "),a("p",[t._v("When setting up many to many relationships with an intermediate table the intermediate table can be set to not allow invalid data to be inserted. To do this use foreign keys by referencing other table keys."),a("br"),t._v("\nTo avoid the problem of orphaned data a cascading delete can be set up on the intermediate table also.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tEmail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" UserRole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nUserId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cascade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tRoleId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" Role"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cascade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UserId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RoleId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The order of the table creation is important the referenced tables need to be created before the referencing table.")]),t._v(" "),a("h2",{attrs:{id:"self-referencing-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#self-referencing-tables"}},[t._v("#")]),t._v(" Self Referencing Tables")]),t._v(" "),a("h3",{attrs:{id:"querying-a-self-referencing-table-subquery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#querying-a-self-referencing-table-subquery"}},[t._v("#")]),t._v(" Querying a Self-Referencing Table (Subquery)")]),t._v(" "),a("p",[t._v("Can be done with a nested select (Subquery)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" LastName \n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Employee bosses \n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReportsTo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bosses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmployeeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" boss\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("In the above query the same table is referenced in the subquery. To make this query successful an alias must be used in this case ‘bosses’ this enables us to query the table twice to find the employee ReportsTo field that is equal to the EmployeeId field in the same table.")]),t._v(" "),a("h3",{attrs:{id:"querying-a-self-referencing-table-using-a-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#querying-a-self-referencing-table-using-a-join"}},[t._v("#")]),t._v(" Querying a Self-Referencing Table Using a Join")]),t._v(" "),a("p",[t._v("To avoid using a subquery a join can be used.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" workers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nbosses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bosses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" boss\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Employee workers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" bosses\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("On")]),t._v(" workers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReportsTo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bosses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmployeeId\n")])])]),a("p",[t._v("The above query is the equivalent of the subquery version again note that both queries of the same table have to use an alias to remove ambiguity.")]),t._v(" "),a("h2",{attrs:{id:"working-with-strings-fixing-bad-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#working-with-strings-fixing-bad-data"}},[t._v("#")]),t._v(" Working with Strings / Fixing Bad Data")]),t._v(" "),a("h3",{attrs:{id:"query-strings-with-partial-matching"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-strings-with-partial-matching"}},[t._v("#")]),t._v(" Query Strings with Partial Matching")]),t._v(" "),a("p",[t._v("To query strings with a partial match the like keyword is used with % to fill in as a wildcard.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AC/DC%'")]),t._v("\n")])])]),a("p",[t._v("The above query will be successful but is an expensive operation as the select will index on every record using the primary key then match the data to the query.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AC/DC%'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_artist_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" Artist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("To avoid this an index can be created on the property that will have the query run against it. This will speed up the query as it will run against the index first before fetching the relevant data.\nBe aware the indexer cannot optimise for terms that start with a wildcard or that use a function call in the where statement.")]),t._v(" "),a("h3",{attrs:{id:"partial-string-results-with-substrings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#partial-string-results-with-substrings"}},[t._v("#")]),t._v(" Partial String Results with Substrings")]),t._v(" "),a("p",[t._v("Substrings can be used to select a portion of the string data in a field.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Use cases for this could be excerpts for a blog post summary concatenate ‘...Read More’ e.t.c\nAlso can be used to resize a varchar field if all the data is always below a certain size take all the fields as substrings and put them into an appropriately sized field.")]),t._v(" "),a("h3",{attrs:{id:"editing-strings-with-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editing-strings-with-replace"}},[t._v("#")]),t._v(" Editing Strings with Replace")]),t._v(" "),a("p",[t._v("The replace keyword can be used to replace data in a field before it is displayed.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Blood'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B*****d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" CleanTitle\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Album "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Blood%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The word blood is replaced by B****d and the resulting string is displayed in the CleanTitle column.")]),t._v(" "),a("h3",{attrs:{id:"fix-bad-data-with-trim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix-bad-data-with-trim"}},[t._v("#")]),t._v(" Fix Bad Data with Trim")]),t._v(" "),a("p",[t._v("If records have unintentional spaces in the entered strings the search function will need a wildcard on each side to find the data."),a("br"),t._v("\nTo fix this issue the trim function can be utilised.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" Artist "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LTRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The Name field for all the artists is updated with whitespace removed from the left of the names.")]),t._v(" "),a("h3",{attrs:{id:"fix-bad-data-with-rtrim-and-datalength"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix-bad-data-with-rtrim-and-datalength"}},[t._v("#")]),t._v(" Fix Bad Data with RTrim and Datalength")]),t._v(" "),a("ul",[a("li",[t._v("The LEN function will return the character length of a field not counting the whitespace characters.")]),t._v(" "),a("li",[t._v("The DATALENGTH function can be used to get the full length of the string entered into the field including the whitespace.")]),t._v(" "),a("li",[t._v("The RTRIM operation can be used to remove trailing whitespace from the string.")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Artist\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" DATALENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" DATALENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RTRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("This query will find all the name records with extra whitespace at the end of the name <> means not equal to.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" Artist "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RTRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("Apply the fix.")]),t._v(" "),a("h2",{attrs:{id:"working-with-dates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#working-with-dates"}},[t._v("#")]),t._v(" Working with Dates")]),t._v(" "),a("h3",{attrs:{id:"slicing-dates-with-datepart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slicing-dates-with-datepart"}},[t._v("#")]),t._v(" Slicing Dates with Datepart")]),t._v(" "),a("p",[t._v("The DATEPART() function can be used to split dates by quarter, month, year and day.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" InvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quarter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" quarter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Invoice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"doing-math-with-datediff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doing-math-with-datediff"}},[t._v("#")]),t._v(" Doing Math with Datediff")]),t._v(" "),a("p",[t._v("DATEDIFF can be used to find the difference between the 2 dates.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" InvoiceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quarter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" quarter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEPART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nDATEDIFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01/01/2005'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("InvoiceDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" MonthsInBusiness\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Invoice\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" MonthsInBusiness\n")])])]),a("p",[t._v("This query orders all the invoice fields requested by the months the business has been trading from 01/01/2005 to the date of the invoice.")])])}),[],!1,null,null,null);s.default=n.exports}}]);